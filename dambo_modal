
<style>
.modal-scroll-area {
  flex: 1;
  overflow-y: auto;
  margin: 16px 0;
  border-top: 1px solid #eee;
  border-bottom: 1px solid #eee;
  padding: 12px 0;
}

.modal-buttons {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-top: 20px;
  flex-shrink: 0;
}

.modal-buttons button {
  background-color: #007aff;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 8px;
  font-size: 16px;
  cursor: pointer;
}

.modal-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.5);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

.modal-content {
  background: #fff;
  padding: 50px 60px;
  border-radius: 20px;
  width: 75%;
  height: 70vh;
  overflow-y: auto;
  box-shadow: 0 10px 40px rgba(0,0,0,0.2);
  animation: fadeInScale 0.3s ease forwards;
  position: relative;
}

.modal-content h2 {
  margin: 0 0 8px 0;
  font-size: 24px;
  color: #222;
}

#modalSubtitle {
  font-size: 15px;
  color: #777;
  margin-bottom: 20px;
  display: block;
}

.close-btn {
  float: right;
  font-size: 24px;
  cursor: pointer;
}

.modal-detail-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 10px;
}

.modal-detail-table thead th {
  color: #555;
  font-size: 15px;
  text-align: left;
  padding: 12px 8px;
  border-bottom: 2px solid #ddd !important;
}

.modal-detail-table td {
  color: #333;
  padding: 12px 8px;
  font-size: 14px;
  border-bottom: 1px solid #eee;
}

@keyframes fadeInScale {
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}
</style>

<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<script>
/* 제품 상세 모달 기능 */
function openProductDetail(insurer, productName) {
  const modal = document.getElementById('productDetailModal');
  const modalTitle = document.getElementById('modalTitle');
  const modalSubtitle = document.getElementById('modalSubtitle');
  const modalBody = document.getElementById('modalDetailBody');
  const age = document.getElementById('ageSelect').value;
  const gender = document.getElementById('genderSelect').value;
  const categorySelect = document.getElementById('categorySelect');
  const categoryText = categorySelect.options[categorySelect.selectedIndex]?.textContent || '';
  const genderText = gender === 'm' ? '남자' : gender === 'w' ? '여자' : '기타';
  modalTitle.textContent = `${insurer} - ${productName}`;
  modalSubtitle.textContent = `${age}세 ${genderText} 기준 · ${categoryText}`;
  modalBody.innerHTML = '';
  const details = jsonData.map(item => {
    const nameKey = item['담보명'] || item['name'] || item['담보 명'] || '이름없음';
    return {
      담보명: nameKey,
      가입금액: item['가입금액'] || '-',
      보험료: item[insurer] || '-'
    };
  });
  if (details.length === 0) {
    modalBody.innerHTML = '<tr><td colspan="3" style="text-align:center; color:#999;">담보 데이터가 없습니다.</td></tr>';
  } else {
    details.forEach(item => {
      const insuranceFee = (item.보험료 && item.보험료 !== '-' && item.보험료 !== 0) ? `${item.보험료.toLocaleString()}원` : '-';
      const amount = (item.가입금액 && item.가입금액 !== '-' && item.가입금액 !== 0) ? `${item.가입금액.toLocaleString()}만원` : '-';
      const tr = document.createElement('tr');
      tr.innerHTML = `<td>${item.담보명}</td><td>${amount}</td><td>${insuranceFee}</td>`;
      modalBody.appendChild(tr);
    });
  }
  modal.style.display = 'flex';
}

function closeModal() {
  document.getElementById('productDetailModal').style.display = 'none';
}

function addProductDetailEvents() {
  document.querySelectorAll('#price-table td:nth-child(2), #price-table td:nth-child(3)').forEach(td => {
    td.style.cursor = 'pointer';
    td.addEventListener('click', () => {
      const row = td.parentElement;
      const insurer = row.querySelector('td:nth-child(2)').innerText.trim();
      const productName = row.querySelector('td:nth-child(3)').innerText.trim();
      openProductDetail(insurer, productName);
    });
  });
}

/* 비교 모달 기능 */
function openCompareModal() {
  if (selectedProducts.length === 0) return;
  const modal = document.getElementById('compareModal');
  const subtitle = document.getElementById('compareSubtitle');
  const minMaxInfo = document.getElementById('minMaxInfo');
  const theadTr = document.querySelector('#compareThead tr');
  const tbody = document.getElementById('compareTableBody');
  theadTr.innerHTML = '<th>담보명</th><th>가입금액</th>';
  const sortedProducts = selectedProducts.map(ins => {
    const total = jsonData.reduce((sum, item) => {
      if (item["담보명"] === "합계") return sum;
      return sum + (item[ins] || 0);
    }, 0);
    return {insurer: ins, product: productData[ins] || '-', total};
  }).sort((a, b) => a.total - b.total);
  sortedProducts.forEach(p => {
    const th = document.createElement('th');
    th.innerHTML = `${p.insurer}<br>(${p.product})`;
    th.style.borderBottom = "2px solid #ddd";
    theadTr.appendChild(th);
  });
  const min = sortedProducts[0].total;
  const max = sortedProducts[sortedProducts.length - 1].total;
  const diff = max - min;
  minMaxInfo.innerHTML = `
    <div style="display: flex; justify-content: space-between; align-items: flex-end; flex-wrap: wrap; gap: 10px; margin-bottom: 10px;">
      <div>
        <div style="color: #ff3b30; font-weight: bold;">
          최저: <span style="font-weight: bold;">${min.toLocaleString()}원</span> 
          (<span style="font-weight: bold;">${sortedProducts[0].insurer}</span>)
        </div>
        <div style="color: #444; font-weight: bold;">
          최고: <span style="font-weight: bold;">${max.toLocaleString()}원</span> 
          (<span style="font-weight: bold;">${sortedProducts[sortedProducts.length - 1].insurer}</span>)
        </div>
      </div>
      <div style="font-size: 26px; font-weight: bold; color: #ff3b2f; text-align: right;">
        차이: ${diff.toLocaleString()}원
      </div>
    </div>
  `;
  tbody.innerHTML = '';
  jsonData.filter(item => item["담보명"] !== "합계").forEach(item => {
    const tr = document.createElement('tr');
    let rowHtml = `<td>${item["담보명"]}</td><td>${(item["가입금액"] || 0).toLocaleString()}만원</td>`;
    sortedProducts.forEach(p => {
      rowHtml += `<td>${(item[p.insurer] || 0).toLocaleString()}원</td>`;
    });
    tr.innerHTML = rowHtml;
    tbody.appendChild(tr);
  });
  const totalTr = document.createElement('tr');
  let totalHtml = `
    <th style="border-top: 2px solid #ddd; font-weight: bold;">합계</th>
    <th style="border-top: 2px solid #ddd;"></th>
  `;
  sortedProducts.forEach(p => {
    const isMin = p.total === min;
    const color = isMin ? '#ff3b30' : '#666';
    totalHtml += `
      <td style="
        color: ${color};
        font-weight: bold;
        border-top: 2px solid #ddd;
        border-bottom: none;
      ">
        ${p.total.toLocaleString()}원
      </td>
    `;
  });
  totalTr.innerHTML = totalHtml;
  tbody.appendChild(totalTr);
  const age = document.getElementById('ageSelect').value;
  const gender = document.getElementById('genderSelect').value;
  const categorySelect = document.getElementById('categorySelect');
  const categoryText = categorySelect.options[categorySelect.selectedIndex]?.textContent || '';
  const genderText = gender === 'm' ? '남자' : gender === 'w' ? '여자' : '기타';
  subtitle.textContent = `${age}세 ${genderText} 기준 · ${categoryText}`;
  modal.style.display = 'flex';
}

function closeCompareModal() {
  document.getElementById('compareModal').style.display = 'none';
}

/* 모달 공통 기능 */
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') {
    if (document.getElementById('compareModal').style.display === 'flex') {
      closeCompareModal();
    } else {
      closeModal();
    }
  }
});

// 모달 드래그 이동 기능
let isDragging = false;
let offsetX, offsetY;
const modalContent = document.getElementById('modalContent');
modalContent.addEventListener('mousedown', function(e) {
  isDragging = true;
  offsetX = e.clientX - modalContent.getBoundingClientRect().left;
  offsetY = e.clientY - modalContent.getBoundingClientRect().top;
  modalContent.style.transition = 'none';
});
document.addEventListener('mouseup', function() {
  isDragging = false;
  modalContent.style.transition = '';
});
document.addEventListener('mousemove', function(e) {
  if (isDragging) {
    const modalWidth = modalContent.offsetWidth;
    const modalHeight = modalContent.offsetHeight;
    const viewportWidth = window.innerWidth;
    const viewportHeight = window.innerHeight;
    let left = e.clientX - offsetX;
    let top = e.clientY - offsetY;
    left = Math.max(0, Math.min(left, viewportWidth - modalWidth));
    top = Math.max(0, Math.min(top, viewportHeight - modalHeight));
    modalContent.style.position = 'absolute';
    modalContent.style.left = left + 'px';
    modalContent.style.top = top + 'px';
  }
});

/* 엑셀 다운로드 공통 */
function setAutoColWidths(worksheet, data) {
  const colWidths = data[0].map((_, colIndex) => {
    const maxLen = data.reduce((max, row) => {
      const cell = row[colIndex];
      const len = cell ? cell.toString().length : 0;
      return Math.max(max, len);
    }, 0);
    return { wch: maxLen + 2 };
  });
  worksheet['!cols'] = colWidths;
}

function downloadCompareExcel() {
  const table = document.getElementById('compareTable');
  const wb = XLSX.utils.book_new();
  const ws = XLSX.utils.table_to_sheet(table);
  const tableData = [];
  table.querySelectorAll('tr').forEach(tr => {
    const row = [];
    tr.querySelectorAll('th, td').forEach(td => {
      row.push(td.innerText.trim());
    });
    tableData.push(row);
  });
  setAutoColWidths(ws, tableData);
  XLSX.utils.book_append_sheet(wb, ws, '상품비교');
  XLSX.writeFile(wb, '상품비교.xlsx');
}

function downloadProductDetailExcel() {
  const table = document.getElementById('productDetailTable');
  const wb = XLSX.utils.book_new();
  const ws = XLSX.utils.table_to_sheet(table);
  const tableData = [];
  table.querySelectorAll('tr').forEach(tr => {
    const row = [];
    tr.querySelectorAll('th, td').forEach(td => {
      row.push(td.innerText.trim());
    });
    tableData.push(row);
  });
  setAutoColWidths(ws, tableData);
  XLSX.utils.book_append_sheet(wb, ws, '상품상세');
  XLSX.writeFile(wb, '상품상세.xlsx');
}
</script>

<!-- 제품 상세 모달 HTML -->
<div id="productDetailModal" class="modal-overlay">
  <div class="modal-content" id="modalContent">
    <img src="https://cdn.imweb.me/upload/S2016083157c63a62163fa/8ea79df9278bd.png" alt="Logo" style="width: 120px; margin-bottom: 20px;">
    <span class="close-btn" onclick="closeModal()">&times;</span>
    <h2 id="modalTitle"></h2>
    <span id="modalSubtitle"></span>
    <div style="overflow-y: auto; max-height: 400px;">
      <table class="modal-detail-table" id="productDetailTable">
        <thead><tr><th>담보명</th><th>가입금액</th><th>보험료</th></tr></thead>
        <tbody id="modalDetailBody"></tbody>
      </table>
    </div>
    <div class="modal-buttons">
      <button onclick="downloadProductDetailExcel()">엑셀 다운로드</button>
    </div>
  </div>
</div>

<!-- 비교 모달 HTML -->
<div class="modal-overlay" id="compareModal">
  <div class="modal-content" id="compareModalContent">
    <img src="https://cdn.imweb.me/upload/S2016083157c63a62163fa/8ea79df9278bd.png" alt="Logo" style="width: 120px; margin-bottom: 16px;">
    <span class="close-btn" onclick="closeCompareModal()">&times;</span>
    <h2>선택한 상품 비교</h2>
    <span id="compareSubtitle"></span>
    <div id="minMaxInfo" class="min-max-info"></div>
    <div class="modal-scroll-area">
      <table class="modal-detail-table" id="compareTable">
        <thead id="compareThead"><tr></tr></thead>
        <tbody id="compareTableBody"></tbody>
      </table>
    </div>
    <div class="modal-buttons">
      <button onclick="downloadCompareExcel()">엑셀 다운로드</button>
    </div>
  </div>
</div>
